project: supabase
schema_version: "1"
stage: production
apps:
  kong:
    env:
      KONG_DATABASE:
        value: off
      KONG_DECLARATIVE_CONFIG:
        value: /home/kong/kong.yml
      KONG_DNS_ORDER:
        value: LAST,A,CNAME
      KONG_PLUGINS:
        value: request-transformer,cors,key-auth,acl
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE:
        value: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS:
        value: 64 160k
      SUPABASE_ANON_KEY:
        value: "{{ .Secrets.ANON_KEY }}"
      SUPABASE_SERVICE_KEY:
        value: "{{ .Secrets.SERVICE_ROLE_KEY }}"
      INTERNAL_DOMAIN:
        value: "production.supabase.zweitagapps.internal"
    network:
      protocol: http
      public: true
      ports:
        - 8000
    resources:
      cpu: 128
      memory: 512
      scale: 0
  studio:
    container:
      health_check:
        command:
          - node
          - -e
          - "require('http').get('http://localhost:3000/api/profile', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})"
        interval: 5
        timeout: 5
        retries: 3
        start_period: 15
    env:
      STUDIO_PG_META_URL:
        value: http://meta.production.supabase.zweitagapps.internal:8080
      POSTGRES_PASSWORD:
        value: "{{ .Secrets.POSTGRES_PASSWORD }}"
      DEFAULT_ORGANIZATION_NAME:
        value: zweitag
      DEFAULT_PROJECT_NAME:
        value: welcome
      SUPABASE_URL:
        value: http://kong.production.supabase.zweitagapps.internal:8000
      SUPABASE_PUBLIC_URL:
        value: https://studio.production.supabase.zweitagapps.net
      SUPABASE_ANON_KEY:
        value: "{{ .Secrets.ANON_KEY }}"
      SUPABASE_SERVICE_KEY:
        value: "{{ .Secrets.SERVICE_ROLE_KEY }}"
    network:
      protocol: http
      public: true
      ports:
        - 3000
    resources:
      cpu: 128
      memory: 256
      scale: 0
  gotrue:
    env:
      GOTRUE_API_HOST:
        value: "0.0.0.0"
      GOTRUE_API_PORT:
        value: "9999"
      API_EXTERNAL_URL:
        value: "https://kong.production.supabase.zweitagapps.net"
      GOTRUE_DB_DRIVER:
        value: postgres
      GOTRUE_DB_DATABASE_URL:
        value: postgres://supabase_auth_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

      GOTRUE_SITE_URL:
        value: ${SITE_URL}
      GOTRUE_URI_ALLOW_LIST:
        value: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP:
        value: "true"

      GOTRUE_JWT_ADMIN_ROLES:
        value: service_role
      GOTRUE_JWT_AUD:
        value: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME:
        value: authenticated
      GOTRUE_JWT_EXP:
        value: ${JWT_EXPIRY}
      GOTRUE_JWT_SECRET:
        value: ${JWT_SECRET}

      GOTRUE_EXTERNAL_EMAIL_ENABLED:
        value: ${ENABLE_EMAIL_SIGNUP}
      GOTRUE_MAILER_AUTOCONFIRM:
        value: ${ENABLE_EMAIL_AUTOCONFIRM}
      # GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED:
      #  value: true
      # GOTRUE_SMTP_MAX_FREQUENCY:
      #  value: 1s
      GOTRUE_SMTP_ADMIN_EMAIL:
        value: ${SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST:
        value: ${SMTP_HOST}
      GOTRUE_SMTP_PORT:
        value: ${SMTP_PORT}
      GOTRUE_SMTP_USER:
        value: ${SMTP_USER}
      GOTRUE_SMTP_PASS:
        value: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME:
        value: ${SMTP_SENDER_NAME}
      GOTRUE_MAILER_URLPATHS_INVITE:
        value: ${MAILER_URLPATHS_INVITE}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION:
        value: ${MAILER_URLPATHS_CONFIRMATION}
      GOTRUE_MAILER_URLPATHS_RECOVERY:
        value: ${MAILER_URLPATHS_RECOVERY}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE:
        value: ${MAILER_URLPATHS_EMAIL_CHANGE}

      GOTRUE_EXTERNAL_PHONE_ENABLED:
        value: ${ENABLE_PHONE_SIGNUP}
      GOTRUE_SMS_AUTOCONFIRM:
        value: ${ENABLE_PHONE_AUTOCONFIRM}
      MFA_ENABLED:
        value: ${MFA_ENABLED}
    network:
      protocol: http
      public: false
      ports:
        - 9999
      health_check:
        path: /health
        status: "200"
    resources:
      cpu: 128
      memory: 128
      scale: 0
  postgrest:
    network:
      protocol: http
      public: false
      ports:
        - 3000
    resources:
      cpu: 128
      memory: 128
      scale: 0
  realtime:
    network:
      protocol: http
      public: false
      ports:
        - 4000
    resources:
      cpu: 128
      memory: 128
      scale: 0
  storage:
    network:
      protocol: http
      public: false
      ports:
        - 5000
    resources:
      cpu: 128
      memory: 128
      scale: 0
  meta:
    #links:
    #  database:
    #    env_key: PG_META_DB_URL
    network:
      protocol: http
      public: false
      ports:
        - 8080
    resources:
      cpu: 128
      memory: 128
      scale: 0
  functions:
    network:
      protocol: http
      public: false
      ports:
        - 8000
    resources:
      cpu: 128
      memory: 128
      scale: 0
  #psql:
  #  links:
  #    database:
  #      env_key: PG_PSQL_DB_URL
  #  network:
  #    protocol: http
  #    public: false
  #    ports:
  #      - 8000
  #  resources:
  #    cpu: 128
  #    memory: 128
  #    scale: 0
  postgresql:
    network:
      protocol: tcp
      public: false
      ports:
        - 5432
    links:
      database-data:
        path: /var/lib/postgresql/data
        read_only: false
    resources:
      cpu: 128
      memory: 128
      scale: 0
services:
  # Waiting for v14.5+ to activate pg_tle
  # database:
  #   type: postgresql
  #   version: "13" # waiting for v14.5+
  #   plan: db.t3.micro
  #   options:
  #     min_storage: 20
  #     max_storage: 100
  database-data:
    type: volume
#  storage:
#    type: volume
